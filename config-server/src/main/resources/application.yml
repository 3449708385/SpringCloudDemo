server:
  port: 7000
#服务名字
spring:
  application:
    name: config-server
  cloud:
    config:
      server:
        git:
          #git 仓库的地址
          uri: https://github.com/3449708385/SpringCloud-config.git
          #git 仓库的账号密码
          username: 3449708385
          password: 4512600075mgp
          search-paths: /**
      discovery:
        enabled: true
          #service-id: config-server
        fail-fast: true
        retry:
           max-attempts: 3  #重试次数

  rabbitmq:
    host: 127.0.0.1
    port: 5672
    username: guest
    password: guest
    publisher-confirms: true   #消息发送到交换机确认机制，是否确认回调
    virtual-host: /
    publisher-returns: true   #消息发送到交换机确认机制，是否返回回调
    listener:
      simple:
        acknowledge-mode: manual   #采用手动应答
        concurrency: 1   #最小消费者数量
        max-concurrency: 10   #最大消费者数量
        retry:
          enabled: true  #是否支持重试
management:
  health:
    rabbit:
      enabled: false
  security:
    enabled: false
#暴露端点
  endpoints:
    web:
      exposure:
        include: bus-refresh

#加入注册中心，实现高可用
eureka:
  server:
    # 测试时关闭自我保护机制，保证不可用服务及时踢出
    enable-self-preservation: false
    eviction-interval-timer-in-ms: 60000  #清理间隔（毫秒）
    #peerNodeReadTimeoutMs: 200000
    #peerNodeConnectTimeoutMs: 60000
    #https://blog.csdn.net/qq_26440803/article/details/83113037
  instance:
    hostname: localhost
    prefer-ip-address: true
    ip-address: 127.0.0.1
    instance-id: ${spring.application.name}:${server.port} #指定实例id
    lease-expiration-duration-in-seconds: 30   #续约更新时间间隔
    lease-renewal-interval-in-seconds: 10     #续约到期时间间隔，默认90
    leaseRenewalIntervalInSeconds: 10     #心跳时间
  client:
    registerWithEureka: true  #是否注册自己到eureka服务中，默认不注册
    fetchRegistry: true     #是否从eureka服务中获取注册信息
    serviceUrl:
      # 服务器注册/获取服务器的zone
      #自己注册到eureka那个服务,可注册多个，用，分隔
      defaultZone: http://${eureka.instance.hostname}:8761/eureka/
    eurekaServerConnectTimeoutSeconds: 60
    eurekaServerReadTimeoutSeconds: 60
    # 健康检测问题 https://my.oschina.net/andChow/blog/1939238
    healthcheck:
      enabled: false
      # 如下配置则打开db-health检查
        #db:
         # enabled: true