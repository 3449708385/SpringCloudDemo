#接下来这步骤很关键，就是要将Client模块下的application.yml文件改为bootstrap.yml,这是很关键的，
#因为bootstrap.yml是比application.yml先加载的。bootstrap.yml优先级高于application.yml。
server:
  port: 7005
spring:
  application:
    #name: config-client
    name: cloud-config  # cloud-config-dev.properties,对应我github配置文件的文件名
  cloud:
    config:
      #启动什么环境下的配置，dev 表示开发环境，这跟你仓库的文件的后缀有关，比如，仓库配置文件命名格式是cloud-config-dev.properties,所以profile 就要写dev
      profile: dev
      #面向服务，允许被发现
      #discovery:
       # enabled: true
        #这个名字是Config Server端的服务名字，不能瞎写。
        #service-id: config-server  #我测试发现无法使用，好像要1.4.3的springboot版本才行
      #label: master
      uri: http://localhost:7000
  rabbitmq:
    host: 127.0.0.1
    port: 5672
    username: guest
    password: guest
    publisher-confirms: true   #消息发送到交换机确认机制，是否确认回调
    virtual-host: /
    publisher-returns: true   #消息发送到交换机确认机制，是否返回回调
    listener:
      simple:
        acknowledge-mode: manual   #采用手动应答
        concurrency: 1   #最小消费者数量
        max-concurrency: 10   #最大消费者数量
        retry:
          enabled: true  #是否支持重试


#注册中心
eureka:
  server:
    # 测试时关闭自我保护机制，保证不可用服务及时踢出
    enable-self-preservation: false
    eviction-interval-timer-in-ms: 60000  #清理间隔（毫秒）
    #peerNodeReadTimeoutMs: 200000
    #peerNodeConnectTimeoutMs: 60000
    #https://blog.csdn.net/qq_26440803/article/details/83113037
  instance:
    hostname: localhost
    prefer-ip-address: true
    ip-address: 127.0.0.1
    instance-id: ${spring.application.name}:${server.port} #指定实例id
    lease-expiration-duration-in-seconds: 30   #续约更新时间间隔
    lease-renewal-interval-in-seconds: 10     #续约到期时间间隔，默认90
    leaseRenewalIntervalInSeconds: 10     #心跳时间
  client:
    registerWithEureka: true  #是否注册自己到eureka服务中，默认不注册
    fetchRegistry: true     #是否从eureka服务中获取注册信息
    serviceUrl:
      # 服务器注册/获取服务器的zone
      #自己注册到eureka那个服务,可注册多个，用，分隔
      defaultZone: http://${eureka.instance.hostname}:8761/eureka/
    eurekaServerConnectTimeoutSeconds: 60
    eurekaServerReadTimeoutSeconds: 60
    # 健康检测问题 https://my.oschina.net/andChow/blog/1939238
    healthcheck:
      enabled: false
      # 如下配置则打开db-health检查
        #db:
         # enabled: true





#是否需要权限拉去，默认是true,如果不false就不允许你去拉取配置中心Server更新的内容
#post请求刷新：http://localhost:7005/actuator/refresh
# 这个是走zuul路由的地址刷新：http://localhost:9001/config/actuator/refresh
management:
  security:
    enabled: false
  endpoints:
      web:
        exposure:
          include: refresh,health
  health:
    rabbit:
      enabled: false